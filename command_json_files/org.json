{
  "commandType": "org Commands",
  "description": "Commands for creating and managing orgs and scratch org users.",
  "commands": [
    {
      "name": "org assign permset",
      "description": "Assign a permission set to one or more org users.",
      "requiredFlags": [
        {
          "name": "--name",
          "description": "Permission set to assign. To assign multiple permission sets, either set multiple --name flags or a single --name flag with multiple names separated by spaces. Enclose names that contain spaces in one set of double quotes."
        },
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set. To specify an alias for the --target-org or --on-behalf-of flags, use the CLI username alias, such as the one you set with the \"alias set\" command."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--on-behalf-of",
          "description": "Username or alias to assign the permission set to. The same syntax applies to --on-behalf-of."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org assign permsetlicense",
      "description": "Assign a permission set license to one or more org users.",
      "requiredFlags": [
        {
          "name": "--name",
          "description": "Name of the permission set license to assign. To assign multiple permission sets, either set multiple --name flags or a single --name flag with multiple names separated by spaces. Enclose names that contain spaces in one set of double quotes."
        },
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set. To specify an alias for the --target-org or --on-behalf-of flags, use the CLI username alias, such as the one you set with the \"alias set\" command."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--on-behalf-of",
          "description": "Usernames or alias to assign the permission set license to. The same syntax applies to --on-behalf-of."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org create sandbox",
      "description": "Create a sandbox org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the production org that contains the sandbox license. When it creates the sandbox org, Salesforce copies the metadata, and optionally data, from your production org to the new sandbox org."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--definition-file",
          "description": "Path to a sandbox definition file. The sandbox definition file is a blueprint for the sandbox. You can create different definition files for each sandbox type that you use in the development process. See <https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_sandbox_definition.htm> for all the options you can specify in the definition file."
        },
        {
          "name": "--set-default",
          "description": "Set the sandbox org as your default org.",
          "type": "boolean"
        },
        {
          "name": "--alias",
          "description": "Alias for the sandbox org. When you create a sandbox, the generated usernames are based on the usernames present in the production org. To ensure uniqueness, the new usernames are appended with the name of the sandbox. For example, the username \"user@example.com\" in the production org results in the username \"user@example.com.mysandbox\" in a sandbox named \"mysandbox\". When you set an alias for a sandbox org, it's assigned to the resulting username of the user running this command."
        },
        {
          "name": "--wait",
          "description": "Number of minutes to wait for the sandbox org to be ready. If the command continues to run after the wait period, the CLI returns control of the terminal to you and displays the \"sf org resume sandbox\" command you run to check the status of the create. The displayed command includes the job ID for the running sandbox creation.",
          "defaultValue": "30"
        },
        {
          "name": "--poll-interval",
          "description": "Number of seconds to wait between retries.",
          "defaultValue": "30"
        },
        {
          "name": "--async",
          "description": "Request the sandbox creation, but don't wait for it to complete. The command immediately displays the job ID and returns control of the terminal to you. This way, you can continue to use the CLI. To check the status of the sandbox creation, run \"sf org resume sandbox\".",
          "type": "boolean"
        },
        {
          "name": "--name",
          "description": "Name of the sandbox org. The name must be a unique alphanumeric string (10 or fewer characters) to identify the sandbox. You can't reuse a name while a sandbox is in the process of being deleted."
        },
        {
          "name": "--source-sandbox-name",
          "description": "Name of the sandbox org to clone. The value of --source-sandbox-name must be an existing sandbox. The existing sandbox, and the new sandbox specified with the --name flag, must both be associated with the production org (--target-org) that contains the sandbox licenses. You can specify either --source-sandbox-name or --source-id when cloning an existing sandbox, but not both."
        },
        {
          "name": "--source-id",
          "description": "ID of the sandbox org to clone. The value of --source-id must be an existing sandbox (SandboxInfo.Id). The existing sandbox, and the new sandbox specified with the --name flag, must both be associated with the production org (--target-org) that contains the sandbox licenses. You can specify either --source-sandbox-name or --source-id when cloning an existing sandbox, but not both."
        },
        {
          "name": "--license-type",
          "description": "Type of sandbox license.",
          "permissibleValues": [
            "Developer",
            "Developer_Pro",
            "Partial",
            "Full"
          ]
        },
        {
          "name": "--no-prompt",
          "description": "Don't prompt for confirmation about the sandbox configuration.",
          "type": "boolean"
        },
        {
          "name": "--no-track-source",
          "description": "Do not use source tracking for this sandbox. We recommend you enable source tracking in Developer and Developer Pro sandbox, which is why it's the default behavior. Source tracking allows you to track the changes you make to your metadata, both in your local project and in the sandbox, and to detect any conflicts between the two. To disable source tracking in the new sandbox, specify the --no-track-source flag. The main reason to disable source tracking is for performance. For example, while you probably want to deploy metadata and run Apex tests in your CI/CD jobs, you probably don't want to incur the costs of source tracking (checking for conflicts, polling the SourceMember object, various file system operations.) This is a good use case for disabling source tracking in the new sandbox.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org create scratch",
      "description": "Create a scratch org.",
      "requiredFlags": [
        {
          "name": "--target-dev-hub",
          "description": "Username or alias of the Dev Hub org. Overrides the value of the target-dev-hub configuration variable, if set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--alias",
          "description": "Alias for the scratch org. New scratch orgs include one administrator by default. The admin user's username is auto-generated and looks something like test-wvkpnfm5z113@example.com. When you set an alias for a new scratch org, it's assigned this username."
        },
        {
          "name": "--async",
          "description": "Request the org, but don't wait for it to complete. The command immediately displays the job ID and returns control of the terminal to you. This way, you can continue to use the CLI. To resume the scratch org creation, run \"sf org resume scratch\".",
          "type": "boolean"
        },
        {
          "name": "--set-default",
          "description": "Set the scratch org as your default org",
          "type": "boolean"
        },
        {
          "name": "--definition-file",
          "description": "Path to a scratch org definition file. The scratch org definition file is a blueprint for the scratch org. It mimics the shape of an org that you use in the development life cycle, such as acceptance testing, packaging, or production. See <https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_def_file.htm> for all the option you can specify in the definition file."
        },
        {
          "name": "--no-ancestors",
          "description": "Don't include second-generation managed package (2GP) ancestors in the scratch org.",
          "type": "boolean"
        },
        {
          "name": "--edition",
          "description": "Salesforce edition of the scratch org. Overrides the value of the \"edition\" option in the definition file, if set. The editions that begin with \"partner-\" are available only if the Dev Hub org is a Partner Business Org.",
          "permissibleValues": [
            "developer",
            "enterprise",
            "group",
            "professional",
            "partner-developer",
            "partner-enterprise",
            "partner-group",
            "partner-professional"
          ]
        },
        {
          "name": "--snapshot",
          "description": "Name of the snapshot to use when creating this scratch org. Overrides the value of the \"snapshot\" option in the defintion file, if set. To view the names of the available snapshots for a given Dev Hub org, run the \"sf org list snapshot\" command."
        },
        {
          "name": "--no-namespace",
          "description": "Create the scratch org with no namespace, even if the Dev Hub has a namespace.",
          "type": "boolean"
        },
        {
          "name": "--duration-days",
          "description": "Number of days before the org expires.",
          "defaultValue": "7"
        },
        {
          "name": "--wait",
          "description": "Number of minutes to wait for the scratch org to be ready. If the command continues to run after the wait period, the CLI returns control of the terminal to you and displays the job ID. To resume the scratch org creation, run the org resume scratch command and pass it the job ID.",
          "defaultValue": "5"
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        },
        {
          "name": "--client-id",
          "description": "Consumer key of the Dev Hub connected app."
        },
        {
          "name": "--track-source",
          "description": "Use source tracking for this scratch org. Set --no-track-source to disable source tracking. We recommend you enable source tracking in scratch orgs, which is why it's the default behavior. Source tracking allows you to track the changes you make to your metadata, both in your local project and in the scratch org, and to detect any conflicts between the two. To disable source tracking in the new scratch org, specify the --no-track-source flag. The main reason to disable source tracking is for performance. For example, while you probably want to deploy metadata and run Apex tests in your CI/CD jobs, you probably don't want to incur the costs of source tracking (checking for conflicts, polling the SourceMember object, various file system operations.) This is a good use case for disabling source tracking in the scratch org.",
          "type": "boolean"
        },
        {
          "name": "--username",
          "description": "Username of the scratch org admin user. Overrides the value of the \"username\" option in the definition file, if set. The username must be unique within the entire scratch org and sandbox universe. You must add your own logic to ensure uniqueness. Omit this flag to have Salesforce generate a unique username for your org."
        },
        {
          "name": "--description",
          "description": "Description of the scratch org in the Dev Hub. Overrides the value of the \"description\" option in the definition file, if set."
        },
        {
          "name": "--name",
          "description": "Name of the org, such as \"Acme Company\". Overrides the value of the \"orgName\" option in the definition file, if set."
        },
        {
          "name": "--release",
          "description": "Release of the scratch org as compared to the Dev Hub release. By default, scratch orgs are on the same release as the Dev Hub. During Salesforce release transition periods, you can override this default behavior and opt in or out of the new release.",
          "permissibleValues": [
            "preview",
            "previous"
          ]
        },
        {
          "name": "--admin-email",
          "description": "Email address that will be applied to the org's admin user. Overrides the value of the \"adminEmail\" option in the definition file, if set."
        },
        {
          "name": "--source-org",
          "description": "15-character ID of the org shape that the new scratch org is based on. Overrides the value of the \"sourceOrg\" option in the definition file, if set. To view the names of the available org shapes for a given Dev Hub org, run the \"sf org list shape\" command."
        }
      ]
    },
    {
      "name": "org create shape",
      "description": "Create a scratch org configuration (shape) based on the specified source org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org create snapshot",
      "description": "Create a snapshot of a scratch org.",
      "requiredFlags": [
        {
          "name": "--target-dev-hub",
          "description": "Username or alias of the Dev Hub org. Not required if the `target-dev-hub` configuration variable is already set."
        },
        {
          "name": "--source-org",
          "description": "ID or locally authenticated username or alias of scratch org to snapshot."
        },
        {
          "name": "--name",
          "description": "Unique name of snapshot."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        },
        {
          "name": "--description",
          "description": "Description of snapshot. Use this description to document the contents of the snapshot. We suggest that you include a reference point, such as a version control system tag or commit ID."
        }
      ]
    },
    {
      "name": "org create user",
      "description": "Create a user for a scratch org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--set-alias",
          "description": "Set an alias for the created username to reference in other CLI commands."
        },
        {
          "name": "--definition-file",
          "description": "File path to a user definition file for customizing the new user. The user definition file uses JSON format and can include any Salesforce User sObject field and Salesforce DX-specific options. See https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_users_def_file.htm for more information."
        },
        {
          "name": "--set-unique-username",
          "description": "Force the username, if specified in the definition file or at the command line, to be unique by appending the org ID. The new user's username must be unique across all Salesforce orgs and in the form of an email address. If you let this command generate a username for you, it's guaranteed to be unique. If you specify an existing username in a definition file, the command fails. Set this flag to force the username to be unique; as a result, the username might be different than what you specify in the definition file.",
          "type": "boolean"
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org delete sandbox",
      "description": "Delete a sandbox.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set. Specify a sandbox with either the username you used when you logged into it, or the alias you gave the sandbox when you created it. Run \"sf org list\" to view all your orgs, including sandboxes, and their aliases. Both the sandbox and the associated production org must already be authenticated with the CLI to successfully delete the sandbox."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--no-prompt",
          "description": "Don't prompt the user to confirm the deletion.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org delete scratch",
      "description": "Delete a scratch org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set. Specify a scratch org with either the username or the alias you gave the scratch org when you created it. Run \"sf org list\" to view all your orgs, including scratch orgs, and their aliases."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--no-prompt",
          "description": "Don't prompt the user to confirm the deletion.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org delete shape",
      "description": "Delete all org shapes for a target org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        },
        {
          "name": "--no-prompt",
          "description": "Don't prompt for confirmation.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org delete snapshot",
      "description": "Delete a scratch org snapshot.",
      "requiredFlags": [
        {
          "name": "--target-dev-hub",
          "description": "Username or alias of the Dev Hub org. Not required if the `target-dev-hub` configuration variable is already set."
        },
        {
          "name": "--snapshot",
          "description": "Name or ID of snapshot to delete. The IDs of scratch org snapshots start with 0Oo."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        },
        {
          "name": "--no-prompt",
          "description": "Don't prompt the user to confirm the deletion.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org disable tracking",
      "description": "Prevent Salesforce CLI from tracking changes in your source files between your project and an org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        }
      ]
    },
    {
      "name": "org display",
      "description": "Display information about an org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        },
        {
          "name": "--verbose",
          "description": "Display the sfdxAuthUrl property.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org display user",
      "description": "Display information about a Salesforce user.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org enable tracking",
      "description": "Allow Salesforce CLI to track changes in your source files between your project and an org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        }
      ]
    },
    {
      "name": "org generate password",
      "description": "Generate a random password for scratch org users.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--on-behalf-of",
          "description": "Comma-separated list of usernames or aliases to assign the password to; must have been created locally with the \"org create user\" command. To generate a password for a scratch org user that you've created locally with the \"org create user\" command."
        },
        {
          "name": "--length",
          "description": "Number of characters in the generated password; valid values are between 8 and 100.",
          "defaultValue": "13"
        },
        {
          "name": "--complexity",
          "description": "Level of password complexity or strength; the higher the value, the stronger the password. To change the password strength, set the --complexity flag to a value between 0 and 5. Each value specifies the types of characters used in the generated password: 0 - lower case letters only; 1 - lower case letters and numbers only; 2 - lower case letters and symbols only; 3 - lower and upper case letters and numbers only; 4 - lower and upper case letters and symbols only; 5 - lower and upper case letters and numbers and symbols only.",
          "defaultValue": "5"
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org get snapshot",
      "description": "Get details about a scratch org snapshot.",
      "requiredFlags": [
        {
          "name": "--target-dev-hub",
          "description": "Username or alias of the Dev Hub org. Not required if the `target-dev-hub` configuration variable is already set."
        },
        {
          "name": "--snapshot",
          "description": "Name or ID of snapshot to retrieve. The IDs of scratch org snapshots start with 0Oo."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org list",
      "description": "List all orgs you've created or authenticated to.",
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--verbose",
          "description": "List more information about each org.",
          "type": "boolean"
        },
        {
          "name": "--all",
          "description": "Include expired, deleted, and unknown-status scratch orgs.",
          "type": "boolean"
        },
        {
          "name": "--clean",
          "description": "Remove all local org authorizations for non-active scratch orgs. Use \"org logout\" to remove non-scratch orgs.",
          "type": "boolean"
        },
        {
          "name": "--no-prompt",
          "description": "Don't prompt for confirmation.",
          "type": "boolean"
        },
        {
          "name": "--skip-connection-status",
          "description": "Skip retrieving the connection status of non-scratch orgs.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org list auth",
      "description": "List authorization information about the orgs you created or logged into.",
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        }
      ]
    },
    {
      "name": "org list limits",
      "description": "Display information about limits in your org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org list metadata",
      "description": "List the metadata components and properties of a specified type.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        },
        {
          "name": "--metadata-type",
          "description": "Metadata type to be retrieved, such as CustomObject; metadata type names are case-sensitive."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "API version to use; default is the most recent API version. Override the api version used for api requests made by this command"
        },
        {
          "name": "--output-file",
          "description": "Pathname of the file in which to write the results."
        },
        {
          "name": "--folder",
          "description": "Folder associated with the component; required for components that use folders; folder names are case-sensitive. Examples of metadata types that use folders are Dashboard, Document, EmailTemplate, and Report."
        }
      ]
    },
    {
      "name": "org list metadata-types",
      "description": "Display details about the metadata types that are enabled for your org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "API version to use; default is the most recent API version. Override the api version used for api requests made by this command"
        },
        {
          "name": "--output-file",
          "description": "Pathname of the file in which to write the results. Directing the output to a file makes it easier to extract relevant information for your package.xml manifest file. The default output destination is the terminal or command window console."
        }
      ]
    },
    {
      "name": "org list shape",
      "description": "List all org shapes you've created.",
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        }
      ]
    },
    {
      "name": "org list snapshot",
      "description": "List scratch org snapshots.",
      "requiredFlags": [
        {
          "name": "--target-dev-hub",
          "description": "Username or alias of the Dev Hub org. Not required if the `target-dev-hub` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org list sobject record-counts",
      "description": "Display record counts for the specified standard or custom objects.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--sobject",
          "description": "API name of the standard or custom object for which to display record counts."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org list users",
      "description": "List all locally-authenticated users of an org.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        }
      ]
    },
    {
      "name": "org login access-token",
      "description": "Authorize an org using an existing Salesforce access token.",
      "requiredFlags": [
        {
          "name": "--instance-url",
          "description": "URL of the instance that the org lives on. If you specify an --instance-url value, this value overrides the sfdcLoginUrl value in your sfdx-project.json file. To specify a My Domain URL, use the format \"https://<MyDomainName>.my.salesforce.com\". To specify a sandbox, set --instance-url to \"https://<MyDomainName>--<SandboxName>.sandbox.my.salesforce.com\"."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--set-default-dev-hub",
          "description": "Set the authenticated org as the default Dev Hub.",
          "type": "boolean"
        },
        {
          "name": "--set-default",
          "description": "Set the authenticated org as the default that all org-related commands run against.",
          "type": "boolean"
        },
        {
          "name": "--alias",
          "description": "Alias for the org."
        },
        {
          "name": "--no-prompt",
          "description": "Don't prompt for confirmation.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org login device",
      "description": "Authorize an org using a device code.",
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--client-id",
          "description": "OAuth client ID (also called consumer key) of your custom connected app."
        },
        {
          "name": "--instance-url",
          "description": "URL of the instance that the org lives on. If you specify an --instance-url value, this value overrides the sfdcLoginUrl value in your sfdx-project.json file. To specify a My Domain URL, use the format \"https://<MyDomainName>.my.salesforce.com\". To specify a sandbox, set --instance-url to \"https://<MyDomainName>--<SandboxName>.sandbox.my.salesforce.com\"."
        },
        {
          "name": "--set-default-dev-hub",
          "description": "Set the authenticated org as the default Dev Hub.",
          "type": "boolean"
        },
        {
          "name": "--set-default",
          "description": "Set the authenticated org as the default that all org-related commands run against.",
          "type": "boolean"
        },
        {
          "name": "--alias",
          "description": "Alias for the org."
        }
      ]
    },
    {
      "name": "org login jwt",
      "description": "Log in to a Salesforce org using a JSON web token (JWT).",
      "requiredFlags": [
        {
          "name": "--username",
          "description": "Username of the user logging in."
        },
        {
          "name": "--jwt-key-file",
          "description": "Path to a file containing the private key."
        },
        {
          "name": "--client-id",
          "description": "OAuth client ID (also called consumer key) of your custom connected app."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--instance-url",
          "description": "URL of the instance that the org lives on. If you specify an --instance-url value, this value overrides the sfdcLoginUrl value in your sfdx-project.json file. To specify a My Domain URL, use the format \"https://<MyDomainName>.my.salesforce.com\". To specify a sandbox, set --instance-url to \"https://<MyDomainName>--<SandboxName>.sandbox.my.salesforce.com\"."
        },
        {
          "name": "--set-default-dev-hub",
          "description": "Set the authenticated org as the default Dev Hub.",
          "type": "boolean"
        },
        {
          "name": "--set-default",
          "description": "Set the authenticated org as the default that all org-related commands run against.",
          "type": "boolean"
        },
        {
          "name": "--alias",
          "description": "Alias for the org."
        }
      ]
    },
    {
      "name": "org login sfdx-url",
      "description": "Authorize an org using a Salesforce DX authorization URL stored in a file or through standard input (stdin).",
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--sfdx-url-file",
          "description": "Path to a file that contains the Salesforce DX authorization URL."
        },
        {
          "name": "--sfdx-url-stdin",
          "description": "Pipe the Salesforce DX authorization URL through standard input (stdin)."
        },
        {
          "name": "--set-default-dev-hub",
          "description": "Set the authenticated org as the default Dev Hub.",
          "type": "boolean"
        },
        {
          "name": "--set-default",
          "description": "Set the authenticated org as the default that all org-related commands run against.",
          "type": "boolean"
        },
        {
          "name": "--alias",
          "description": "Alias for the org."
        }
      ]
    },
    {
      "name": "org login web",
      "description": "Log in to a Salesforce org using the web server flow.",
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--browser",
          "description": "Browser in which to open the org. If you don't specify --browser, the command uses your default browser. The exact names of the browser applications differ depending on the operating system you're on; check your documentation for details.",
          "permissibleValues": [
            "chrome",
            "edge",
            "firefox"
          ]
        },
        {
          "name": "--client-id",
          "description": "OAuth client ID (also called consumer key) of your custom connected app."
        },
        {
          "name": "--instance-url",
          "description": "URL of the instance that the org lives on. If you specify an --instance-url value, this value overrides the sfdcLoginUrl value in your sfdx-project.json file. To specify a My Domain URL, use the format \"https://<MyDomainName>.my.salesforce.com\". To specify a sandbox, set --instance-url to \"https://<MyDomainName>--<SandboxName>.sandbox.my.salesforce.com\"."
        },
        {
          "name": "--set-default-dev-hub",
          "description": "Set the authenticated org as the default Dev Hub.",
          "type": "boolean"
        },
        {
          "name": "--set-default",
          "description": "Set the authenticated org as the default that all org-related commands run against.",
          "type": "boolean"
        },
        {
          "name": "--alias",
          "description": "Alias for the org."
        },
        {
          "name": "--client-app",
          "description": "Name to give to the link between the connected app or external client and the already-authenticated user. You can specify any string you want. Must be used with --username."
        },
        {
          "name": "--username",
          "description": "Username of the already-authenticated user to link to the connected app or external client app. Must be used with --client-app."
        },
        {
          "name": "--scopes",
          "description": "Authentication (OAuth) scopes to request. Use the scope's short name; specify multiple scopes using just one flag instance and separated by spaces: --scopes \"sfap_api chatbot_api\"."
        }
      ]
    },
    {
      "name": "org logout",
      "description": "Log out of a Salesforce org.",
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--target-org",
          "description": "Username or alias of the target org."
        },
        {
          "name": "--client-app",
          "description": "Client app to log out of."
        },
        {
          "name": "--all",
          "description": "Include all authenticated orgs. All orgs includes Dev Hubs, sandboxes, DE orgs, and expired, deleted, and unknown-status scratch orgs.",
          "type": "boolean"
        },
        {
          "name": "--no-prompt",
          "description": "Don't prompt for confirmation.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org open",
      "description": "Open your default scratch org, or another specified org, in a browser.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        },
        {
          "name": "--private",
          "description": "Open the org in the default browser using private (incognito) mode.",
          "type": "boolean"
        },
        {
          "name": "--browser",
          "description": "Browser where the org opens.",
          "permissibleValues": [
            "chrome",
            "edge",
            "firefox"
          ]
        },
        {
          "name": "--path",
          "description": "Navigation URL path to open a specific page."
        },
        {
          "name": "--url-only",
          "description": "Display navigation URL, but don't launch browser.",
          "type": "boolean"
        },
        {
          "name": "--source-file",
          "description": "Path to ApexPage, FlexiPage, Flow, or Agent metadata to open in the associated Builder."
        }
      ]
    },
    {
      "name": "org open agent",
      "description": "Open an agent in your org's Agent Builder UI in a browser.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the target org. Not required if the `target-org` configuration variable is already set."
        },
        {
          "name": "--api-name",
          "description": "API name, also known as developer name, of the agent you want to open in the org's Agent Builder UI."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--api-version",
          "description": "Override the api version used for api requests made by this command"
        },
        {
          "name": "--private",
          "description": "Open the org in the default browser using private (incognito) mode.",
          "type": "boolean"
        },
        {
          "name": "--browser",
          "description": "Browser where the org opens.",
          "permissibleValues": [
            "chrome",
            "edge",
            "firefox"
          ]
        },
        {
          "name": "--url-only",
          "description": "Display navigation URL, but don't launch browser.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org refresh sandbox",
      "description": "Refresh a sandbox org using the sandbox name.",
      "requiredFlags": [
        {
          "name": "--target-org",
          "description": "Username or alias of the production org that contains the sandbox license."
        }
      ],
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--no-auto-activate",
          "description": "Disable auto-activation of the sandbox after a successful refresh. By default, a sandbox auto-activates after a refresh. Use this flag to control sandbox activation manually.",
          "type": "boolean"
        },
        {
          "name": "--wait",
          "description": "Number of minutes to poll for sandbox refresh status. If the command continues to run after the wait period, the CLI returns control of the terminal to you and displays the \"sf org resume sandbox\" command for you run to check the status of the refresh. The displayed command includes the job ID for the running sandbox refresh.",
          "defaultValue": "30"
        },
        {
          "name": "--poll-interval",
          "description": "Number of seconds to wait between status polling requests.",
          "defaultValue": "30"
        },
        {
          "name": "--source-sandbox-name",
          "description": "Name of the sandbox org that becomes the new source org for the refreshed sandbox. The value of --source-sandbox-name must be an existing sandbox. The new source sandbox, and the refreshed sandbox specified with the --name flag, must both be associated with the production org (--target-org) that contains the sandbox licenses. You can specify either --source-sandbox-name or --source-id when refreshing an existing sandbox, but not both."
        },
        {
          "name": "--source-id",
          "description": "ID of the sandbox org that becomes the new source org for the refreshed sandbox. The value of --source-id must be an existing sandbox. The new source sandbox, and the refreshed sandbox specified with the --name flag, must both be associated with the production org (--target-org) that contains the sandbox licenses. You can specify either --source-id or --source-sandbox-name when refreshing an existing sandbox, but not both."
        },
        {
          "name": "--async",
          "description": "Request the sandbox refresh, but don't wait for it to complete. The command immediately displays the job ID and returns control of the terminal to you. This way, you can continue to use the CLI. To check the status of the sandbox refresh, run \"sf org resume sandbox\".",
          "type": "boolean"
        },
        {
          "name": "--name",
          "description": "Name of the existing sandbox org in your production org that you want to refresh."
        },
        {
          "name": "--definition-file",
          "description": "Path to a sandbox definition file for overriding its configuration when you refresh it. The sandbox definition file is a blueprint for the sandbox; use the file to change the sandbox configuration during a refresh. If you don't want to change the sandbox configuration when you refresh it, then simply use the --name flag to specify the sandbox and don't use this flag. See <https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_sandbox_definition.htm> for all the options you can specify in the definition file."
        },
        {
          "name": "--no-prompt",
          "description": "Don't prompt for confirmation about the sandbox refresh.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "org resume sandbox",
      "description": "Check the status of a sandbox creation, and log in to it if it's ready.",
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--wait",
          "description": "Number of minutes to wait for the sandbox org to be ready. If the command continues to run after the wait period, the CLI returns control of the terminal window to you and returns the job ID. To resume checking the sandbox creation, rerun this command."
        },
        {
          "name": "--name",
          "description": "Name of the sandbox org."
        },
        {
          "name": "--job-id",
          "description": "Job ID of the incomplete sandbox creation that you want to check the status of. The job ID is valid for 24 hours after you start the sandbox creation."
        },
        {
          "name": "--use-most-recent",
          "description": "Use the most recent sandbox create request.",
          "type": "boolean"
        },
        {
          "name": "--target-org",
          "description": "Username or alias of the production org that contains the sandbox license. When it creates the sandbox org, Salesforce copies the metadata, and optionally data, from your production org to the new sandbox org."
        }
      ]
    },
    {
      "name": "org resume scratch",
      "description": "Resume the creation of an incomplete scratch org.",
      "optionalFlags": [
        {
          "name": "--json",
          "description": "Format output as json.",
          "type": "boolean"
        },
        {
          "name": "--flags-dir",
          "description": "Import flag values from a directory."
        },
        {
          "name": "--job-id",
          "description": "Job ID of the incomplete scratch org create that you want to resume. The job ID is the same as the record ID of the incomplete scratch org in the ScratchOrgInfo object of the Dev Hub. The job ID is valid for 24 hours after you start the scratch org creation."
        },
        {
          "name": "--use-most-recent",
          "description": "Use the job ID of the most recent incomplete scratch org.",
          "type": "boolean"
        },
        {
          "name": "--wait",
          "description": "Number of minutes to wait for the scratch org to be ready. If the command continues to run after the wait period, the CLI returns control of the terminal window to you and returns the job ID. To resume checking the scratch creation, rerun this command."
        }
      ]
    }
  ]
}